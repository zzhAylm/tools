package com.zzh.jvm;

/**
 * @Description: 垃圾回收
 * @Author: zzh
 * @Crete 2023/2/14 10:03
 */
public class Jvm31 {

    /**
     * 垃圾回收器：
     *
     * 垃圾回收器的分类：并行和串行
     *
     * 按工作模式分，可以分为并发式垃圾回收，和独占式垃圾回收器
     *
     *
     * 按碎片处理方式：分为压缩式垃圾回收和非压缩式垃圾回收
     *
     * 按工作内存区分，可分为年轻代垃圾回收和老年代垃圾收器
     *
     * 评估垃圾回收器的指标：
     *
     *  %吞吐量，程序运行时间/ 程序运行时间+垃圾回收时间
     *  垃圾收集开销 ， 垃圾回收时间/ 程序运行时间+垃圾回收时间
     *
     *  %暂停时间，执行垃圾回收的时候，程序工作线程被暂停的时间
     *  收集频率，垃圾收集操作发生的频率
     *
     *  %内存占用，Java堆内存所占的大小
     *  快速 ，一个对象诞生到被回收所经历的时间
     *
     *
     *  衡量gc的指标总结：吞吐量和暂停时间
     *  // 吞吐量：总体上垃圾收收集的时间少，
     *  // 暂停时间（低延迟，用户体验好）：每次垃圾回收所需的时间少
     *
     * 现在的标准：在最大吞吐量优先的情况下，降低停顿时间
     * */

    /**
     * 垃圾回收器的概述：
     * Java 常见的垃圾收集器有哪些：
     * Serial
     * ParNew，并行
     * Parallel 、Parallel old 和Concurrent Mark Sweep
     * CMS: 并行
     * G1 (jkd9 默认)
     * ZGC 低延迟
     * shenandoah GC，
     *
     *
     * */
    /**
     * 串行，只有一个线程执行： Serial， Serial old
     * 并行。多个线程执行 ： parNew ，Parallel  Scavenge ，Parallel old
     * 并发，用户线程垃圾收集线程同时执行：cms ，G1
     * */
    public static void main(String[] args) {

    }
}
