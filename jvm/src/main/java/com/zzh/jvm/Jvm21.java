package com.zzh.jvm;

/**
 * @Description: 图示方法区的使用
 * @Author: zzh
 * @Crete 2023/2/3 11:09
 */
public class Jvm21 {

    // 方法区: 类型信息，字段，方法，常量
    // 堆：字符串常量池，静态变量
    //  JRocket: 方法区放入到本地内存中 ，HotSport:放在Jvm的内存中
    //  JRocket 没有永久代，
    //  HotSport:在jdk8以后也去掉了永久代，使用元空间替代
    // 为什么去掉永久代？ 永久代设置的空间大小很难确定，JRocket和J9都是没有永久代的概念，HotSport 结合JRocket去掉了永久代，堆方法区调优很困难
    // 方法区垃圾回收：类信息（类型信息，字段，方法），常量
    // 堆中存储这静态变量和字符串常量池
    // Jvm的内存变化，jdk7之前是由永久代的，jdk8去掉了永久代，使用元空间替代，元空间使用的是本地内存
    // 堆中存储着 静态变量和字符串常量
    // 字符串常量 为什么从方法区迁移到了 堆中，因为在方法中的字符串不容易被回收，每次full gc的时候才会回收，但是我们程序中一般都会有大量的字符串，放在堆中更有利于回收字符串

    // 静态变量的存放位置：
    // 方法区中存放：类信息（方法信息，域信息），常量
    // 堆中存放：对象，字符串常量，静态变量
    // 栈： 八种基本数据类型，对象的引用


    public static void main(String[] args) {

    }
}
